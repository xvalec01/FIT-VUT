// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ICSapp.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190405133245_ChangeUserTeamAttributesNames&Types")]
    partial class ChangeUserTeamAttributesNamesTypes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0-preview3.19153.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ICSapp.DAL.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("MessageContent");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Message");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Message");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("TeamName");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Activity");

                    b.Property<string>("Description");

                    b.Property<string>("EmailAdress");

                    b.Property<string>("FirstName");

                    b.Property<DateTime>("LastActivity");

                    b.Property<string>("Password");

                    b.Property<byte[]>("Picture");

                    b.Property<string>("SureName");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.UserTeam", b =>
                {
                    b.Property<Guid?>("UserId");

                    b.Property<Guid?>("TeamId");

                    b.Property<Guid>("Id");

                    b.HasKey("UserId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("UserTeam");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.Comment", b =>
                {
                    b.HasBaseType("ICSapp.DAL.Entities.Message");

                    b.Property<Guid?>("AuthorId");

                    b.Property<Guid?>("PostId");

                    b.Property<Guid?>("SuperiorPostId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("PostId");

                    b.HasIndex("SuperiorPostId");

                    b.HasDiscriminator().HasValue("Comment");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.Post", b =>
                {
                    b.HasBaseType("ICSapp.DAL.Entities.Message");

                    b.Property<Guid?>("AuthorId")
                        .HasColumnName("Post_AuthorId");

                    b.Property<Guid?>("TeamId");

                    b.HasIndex("AuthorId");

                    b.HasIndex("TeamId");

                    b.HasDiscriminator().HasValue("Post");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.UserTeam", b =>
                {
                    b.HasOne("ICSapp.DAL.Entities.Team", "Team")
                        .WithMany("UserLinks")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ICSapp.DAL.Entities.User", "User")
                        .WithMany("TeamLinks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.Comment", b =>
                {
                    b.HasOne("ICSapp.DAL.Entities.User", "Author")
                        .WithMany("Contributions")
                        .HasForeignKey("AuthorId");

                    b.HasOne("ICSapp.DAL.Entities.Post")
                        .WithMany("Contributions")
                        .HasForeignKey("PostId");

                    b.HasOne("ICSapp.DAL.Entities.Message", "SuperiorPost")
                        .WithMany()
                        .HasForeignKey("SuperiorPostId");
                });

            modelBuilder.Entity("ICSapp.DAL.Entities.Post", b =>
                {
                    b.HasOne("ICSapp.DAL.Entities.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId");

                    b.HasOne("ICSapp.DAL.Entities.Team")
                        .WithMany("Posts")
                        .HasForeignKey("TeamId");
                });
#pragma warning restore 612, 618
        }
    }
}
